import asyncio
import aiohttp
from gtts import gTTS
from aiogram.filters import Command
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
import config  # –≤–∞—à —Ñ–∞–π–ª —Å —Ç–æ–∫–µ–Ω–æ–º
from googletrans import Translator
import os
import tempfile
from aiogram.types import FSInputFile

translator = Translator()

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=config.TOKEN)
dp = Dispatcher()

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ /start
@dp.message(Command(commands=['start']))
async def start_handler(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –≥–∏–∫–æ–≤—Å–∫–∏–π –±–æ—Ç-—à—É—Ç–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /joke –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —à—É—Ç–∫—É:",
        reply_markup=get_joke_button()
    )


# –í–∞—à–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —à—É—Ç–∫–∏
async def get_gamer_joke():
    url = 'https://geek-jokes.sameerkumar.website/api?format=json'
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            if response.status == 200:
                data = await response.json()
                joke_en = data['joke']
                # –ø–µ—Ä–µ–≤–æ–¥–∏–º
                joke_ru = translator.translate(joke_en, src='en', dest='ru').text
                return joke_ru
            else:
                return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —à—É—Ç–∫—É :("



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /joke
@dp.message(Command(commands=['joke']))
async def handle_joke(message: Message):
    joke = await get_gamer_joke()
    await message.answer(joke, reply_markup=get_joke_button())
    # –°–æ–∑–¥–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ
    await send_voice_from_text(bot, message,     # –°–æ–∑–¥–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ
    await send_voice_from_text(bot, message, joke))


# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
def get_joke_button():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–†–∞—Å–∫–∞—á–∞—Ç—å —à—É—Ç–∫—É üîÑ", callback_data='refresh_joke')]
    ])

# –û–±—Ä–∞–±–æ—Ç–∫–∞ "–†–∞—Å–∫–∞—á–∞—Ç—å —à—É—Ç–∫—É" —Å –≥–æ–ª–æ—Å–æ–≤—ã–º
@dp.callback_query(F.data == 'refresh_joke')
async def refresh_joke_callback(callback: CallbackQuery):
    await callback.answer()
    joke = await get_gamer_joke()
    # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —à—É—Ç–∫–∏
    await callback.message.edit_text(
        joke,
        reply_markup=get_joke_button()
    )
    translated_text = joke  # —Ç—É—Ç –º–æ–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥

    # –°–æ–∑–¥–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –ø–µ—Ä–µ–≤–æ–¥–∞
    await send_voice_from_text(bot, callback.message, translated_text)


async def send_voice_from_text(bot, message, text):
    with tempfile.NamedTemporaryFile(suffix=".mp3", delete=False) as fp:
        filename = fp.name
        tts = gTTS(text=text, lang='ru')
        tts.save(filename)
    try:
        voice_file = FSInputFile(path=filename)
        await bot.send_voice(chat_id=message.chat.id, voice=voice_file)
    finally:
        os.remove(filename)



# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞
async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())